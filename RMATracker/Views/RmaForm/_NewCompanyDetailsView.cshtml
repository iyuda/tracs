@using RMATracker.Models
@model DataLayer.CompanyDetails
@using DataLayer
@{
    //var stateList = State.GetStates(userInfo: ClientDetection.GetUserEnvironment(Request), parameters: new List<string>() { "GetAll" });
    var stateList = new List<State>();
    var countryList = ((Country.fullList?.Count ?? 0) == 0 ? Country.GetCountries() : Country.fullList) ?? new List<Country>();
}

@{
    ViewBag.QueryMode = (ViewBag.QueryMode ?? false);

    string is_asterik = ViewBag.QueryMode ? ": " : "*";
    var SectionClass = (ViewBag.IsMobile ?? ViewContext.HttpContext.GetOverriddenBrowser().IsMobileDevice) ? "section-mobile" : "section1";
}

<form id="formCompanyDetailsSave" action="~/RmaForm/SubmitCompanyDetails" method="post" class="wpcf7-form" enctype="multipart/form-data" novalidate="novalidate" runat="server">
    <fieldset>
        @Html.HiddenFor(m => m.id)


        <div class="form-group bank-name" style="padding-left:10px">
            <label class="">End User Company Name<span class="required">@is_asterik</span></label>
            @if (!ViewBag.QueryMode)
            {
                @Html.TextBoxFor(m => m.CompanyName, new { @style = "width:98%", @maxlength = "100", @aria_invalid = "false", @aria_required = "true", @required = "", @class = "capitalize wpcf7-form-control wpcf7-text wpcf7-validates-as-required form-control" })
            }
            else
            {
                @Html.DisplayFor(m => m.CompanyName)
                @Html.HiddenFor(m => m.CompanyName)
            }
        </div>
        <div class="container1" >
            <div class="form-group street-address" style="padding-left:10px">
                @*<center> <b> <u> New Bank Branch Address  </u> </b> </center><br />*@
                <label class="">Branch Street Address<span class="required">@is_asterik</span></label>
                @if (!ViewBag.QueryMode)
                {
                    @Html.TextBoxFor(m => m.Address, new { @style = "width:98%", @maxlength = "255", @aria_invalid = "false", @aria_required = "true", @required = "", @class = "capitalize wpcf7-form-control wpcf7-text wpcf7-validates-as-required form-control" })
                }
                else
                {
                    @Html.DisplayFor(m => m.Address)
                    @Html.HiddenFor(m => m.Address)
                }
            </div>
        </div>
        <div class="container1 " style="padding-left:10px">
            
            <div class="form-group section1 country">
                <div><label for="CompanyDetailsCountryId">Branch Country<span class="required">@is_asterik</span></label></div>
                @(Html.Kendo().DropDownListFor(m => m.CompanyDetailsCountryId)
                                            .BindTo(new SelectList(countryList, "CountryId", "Name", Model == null ? 0 : Model?.CompanyDetailsCountryId))
                                            .HtmlAttributes(new { @id = "CompanyDetailsCountryId", @class = "", @style = "width:100%; min-height: 36px;", onchange = "CompanyDetailsCountryChangeEvent(this); ComboChangeEvent(this)" }))

            </div>
            
        </div>

        <div class="container1" style="padding-left:10px">
            <div class="@SectionClass">
                <div class="form-group city">
                    <label class="">Branch City<span class="required">@is_asterik</span></label>
                    @*    <input class="wpcf7-form-control wpcf7-text wpcf7-validates-as-required form-control" name="city" type="text" value="" aria-invalid="false" aria-required="true" required="">*@
                    @if (!ViewBag.QueryMode)
                    {
                        @Html.TextBoxFor(m => m.City, new { @maxlength = "50", @aria_invalid = "false", @aria_required = "true", @required = "", @class = "capitalize wpcf7-form-control wpcf7-text wpcf7-validates-as-required form-control" })
                    }
                    else
                    {
                        @Html.DisplayFor(m => m.City)
                        @Html.HiddenFor(m => m.City)
                    }
                </div>
            </div>
            <div class="@SectionClass">
                <div class="form-group state">
                    <label class="" for="CompanyDetailsStateId">Branch State<span class="required">@is_asterik</span></label>
                    @if (!ViewBag.QueryMode)
                    {
                        @* @(Html.Kendo().ComboBoxFor(m => m.CompanyDetailsStateId)
            .Filter("contains")
            .Placeholder("-- Select State --")
            .DataTextField("Text")
            .DataValueField("Value")
            .BindTo(new SelectList(stateList, "StateId", "Name", Model == null ? 0 : Model?.CompanyDetailsStateId))
            .Suggest(true)
            .HtmlAttributes(new { @id = "CompanyDetailsStateId", style = "width:100%;", required = "required", onchange = "ComboChangeEvent(this)" }))*@
                        @(Html.Kendo().DropDownListFor(m => m.CompanyDetailsStateId)
                            .BindTo(new SelectList(stateList, "StateId", "Name"))
                            .HtmlAttributes(new { @id = "CompanyDetailsStateId", @class = "", @style = "width: 100%; height: 36px;" }))

                    }
                    else
                    {
                        @Html.DisplayFor(m => m.state.Name)
                        @Html.HiddenFor(m => m.state.Name)
                    }
                </div>
            </div>
            <div class="@SectionClass">
                <div class="form-group zip">
                    <label class="">Branch Zip Code<span class="required">@is_asterik</span></label>
                    @*<input class="wpcf7-form-control wpcf7-text wpcf7-validates-as-required form-control" name="zip" type="text" value="" aria-invalid="false" aria-required="true" required="">*@
                    @if (!ViewBag.QueryMode)
                    {
                        @Html.TextBoxFor(m => m.ZipCode, new { @pattern = "[0-9]{3} [0-9]{2}|[0-9]{5}|[0-9]{5}-[0-9]{4}|[0-9]{5} [0-9]{4}", @maxlength = "10", @aria_invalid = "false", @aria_required = "true", @required = "", @class = "zipcode wpcf7-form-control wpcf7-text wpcf7-validates-as-required form-control" })
                    }
                    else
                    {
                        @Html.DisplayFor(m => m.ZipCode)
                        @Html.HiddenFor(m => m.ZipCode)
                    }
                </div>
            </div>
        </div>

    </fieldset>
</form>
<script>
    $(document).ready(function () {
        
    })
    function CompanyDetailsInitUSA() {
        //Theory: on initial load, change to united states
        $("#CompanyDetailsCountryId").data("kendoDropDownList").select(function (dataItem) {
            return dataItem.Value === "240";
        });
        CompanyDetailsCountryChangeEvent();
    }
    function CompanyDetailsCountryChangeEvent(e) {
        //$("#combobox").data("kendoComboBox").value("");
        var chosenId = $("#CompanyDetailsCountryId").data('kendoDropDownList').value();
        if (!chosenId || chosenId == "") chosenId = 240;
        
        $("#CompanyDetailsStateId").kendoDropDownList({
            dataTextField: "Text",
            dataValueField: "Value",
            autoBind: true,
              dataSource: {
                transport: {
                    read: {
                        cache: false,
                        serverFiltering: true,
                        async: false,
                        dataType: "json",
                        url: '@Url.Action("GetStatesByCountryJson", "Home")?countryId=' + chosenId,
                    }
                }
            }
           // filter: "contains",
            //suggest: true
        });

    }
</script>
